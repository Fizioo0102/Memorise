spring:
#  data:
#    mongodb:
#      host: ${MONGODB_HOST}
#      port: ${MONGODB_PORT}
#      database: ${MONGODB_DATABASE}
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        default_batch_fetch_size: 500
#  servlet:
#    multipart:
#      max-file-size: 20MB
#      max-request-size: 50MB
  security:
    oauth2:
      client:
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
        registration:
          kakao:
            client-id: ${CLIENT_ID}
            client-secret: ${CLIENT_SECRET}
            client-authentication-method: client_secret_post
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            authorization-grant-type: authorization_code
            client-name: kakao
            scope:
              - account_email
jwt:
  secretKey: testsy
  access:
    expiration: ${ACCESS_EXPIRATION} # 1??(60?) (1000L(ms -> s) * 60L(s -> m) * 60L(m -> h))
    header: Authorization
  refresh:
    expiration: ${REFRESH_EXPIRATION} #  (1000L(ms -> s) * 60L(s -> m) * 60L(m -> h) * 24L(h -> ??) * 14(2?))
    header: Authorization-refresh
server:
  port: 8080

#  management.endpoints.web.exposure.include=health, info, prometheus

management:
  endpoints:
    web:
      exposure:
        include: health,info,prometheus
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
  prometheus:
    metrics:
      export:
        enabled: true
#cloud:
#  aws:
#    s3:
#      bucket: ${AWS_S3_BUCKET}
#    credentials:
#      access-key: ${AWS_ACCESS_KEY}
#      secret-key: ${AWS_SECRET_KEY}
#    region:
#      static: ap-northeast-2
#      auto: false
#    stack:
#      auto: false